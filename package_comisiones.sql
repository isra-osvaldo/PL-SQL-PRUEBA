-- DEFINIR CABECERA DEL PACKAGE
CREATE OR REPLACE PACKAGE PKG_COMISIONES
IS
    V_ERROR_NUMERO NUMBER;
    V_MOTIVO_ERROR VARCHAR2(250);
    V_MENSAJE_ERROR VARCHAR2(250);
    FUNCTION FN_OBTENER_MONTO_BOLETAS(P_COD_VEN NUMBER, P_MES NUMBER) RETURN NUMBER;
    FUNCTION FN_PORC_MONTO_COMISION (P_MONTO_BOLETAS NUMBER) RETURN NUMBER;
    FUNCTION FN_CALCULAR_COMISION(P_MONTO_BOLETAS NUMBER, P_PORC_COMISION NUMBER) RETURN NUMBER;
    PROCEDURE P_ERROR_PROCESO_COMISION(P_NUMERO_ERROR NUMBER, P_MOTIVO_ERROR VARCHAR2, P_MENSAJE_ERROR VARCHAR2);
END PKG_COMISIONES;

-- DEFINIR CUERPO DEL PACKAGE
CREATE OR REPLACE PACKAGE BODY PKG_COMISIONES
IS
    PROCEDURE P_ERROR_PROCESO_COMISION(P_NUMERO_ERROR NUMBER, P_MOTIVO_ERROR VARCHAR2, P_MENSAJE_ERROR VARCHAR2)
    IS
    BEGIN
        INSERT INTO ERROR_PROCESO_COMISION
        VALUES (
            SEQ_ERROR.NEXTVAL,
            P_NUMERO_ERROR,
            P_MOTIVO_ERROR,
            P_MENSAJE_ERROR
        );
    END P_ERROR_PROCESO_COMISION;
    
    FUNCTION FN_OBTENER_MONTO_BOLETAS(P_COD_VEN NUMBER, P_MES NUMBER) RETURN NUMBER
    IS
        V_MONTO_BOLETAS             BOLETAS.MONTO_TOTAL%TYPE; 
    BEGIN
        -- OBTENER TOTAL DE VENTAS REALIZADAS POR VENDEDOR
            SELECT SUM(MONTO_TOTAL) 
            INTO V_MONTO_BOLETAS
            FROM BOLETAS
            WHERE VENDEDORES_COD_VEN = P_COD_VEN AND EXTRACT(MONTH FROM FECHA) = P_MES
            GROUP BY VENDEDORES_COD_VEN;
            
            RETURN V_MONTO_BOLETAS;
    EXCEPTION
        WHEN OTHERS THEN
            V_ERROR_NUMERO := SQLCODE;
            V_MOTIVO_ERROR := SUBSTR(SQLERRM, 1, 30); -- DEBIDO AL TAMAÑO DEL CAMPO DE LA TABLA SE APLICÓ SUBSTR AL SQLERRM
            V_MENSAJE_ERROR := 'Ha ocurrido un error';
            -- INSERTAR ERRORES EN LA TABLA ERROR_PROCESO_COMISION A TRAVÉS DEL PROCEDIMIENTO P_ERROR_PROCESO_COMISION    
            P_ERROR_PROCESO_COMISION(V_ERROR_NUMERO, V_MOTIVO_ERROR, V_MENSAJE_ERROR);            
            RETURN 0;
    END FN_OBTENER_MONTO_BOLETAS;
    
    FUNCTION FN_PORC_MONTO_COMISION (P_MONTO_BOLETAS NUMBER) RETURN NUMBER
    IS 
        V_PORC_COMISION             NUMBER;
    BEGIN
        -- OBTENER PORCENTAJE COMISIÓN SEGÚN TABLA DE COMISIONES
        V_PORC_COMISION := CASE 
                                WHEN P_MONTO_BOLETAS BETWEEN 0 AND 999 THEN 0
                                WHEN P_MONTO_BOLETAS BETWEEN 1000 AND 2000 THEN 5
                                WHEN P_MONTO_BOLETAS BETWEEN 2001 AND 3000 THEN 10
                                WHEN P_MONTO_BOLETAS >= 3001 THEN 20
                            END;
                            
        RETURN V_PORC_COMISION;
    EXCEPTION
        WHEN OTHERS THEN 
            V_ERROR_NUMERO := SQLCODE;
            V_MOTIVO_ERROR := SUBSTR(SQLERRM, 1, 30); -- DEBIDO AL TAMAÑO DEL CAMPO DE LA TABLA SE APLICÓ SUBSTR AL SQLERRM
            V_MENSAJE_ERROR := 'Ha ocurrido un error ';
            -- INSERTAR ERRORES EN LA TABLA ERROR_PROCESO_COMISION A TRAVÉS DEL PROCEDIMIENTO P_ERROR_PROCESO_COMISION    
            P_ERROR_PROCESO_COMISION(V_ERROR_NUMERO, V_MOTIVO_ERROR, V_MENSAJE_ERROR); 
            RETURN 0;
    END FN_PORC_MONTO_COMISION;
    
    FUNCTION FN_CALCULAR_COMISION(P_MONTO_BOLETAS NUMBER, P_PORC_COMISION NUMBER) RETURN NUMBER
    IS 
        V_MONTO_COMISION            NUMBER;
    BEGIN
        -- CALCULAR COMSIÓN
        V_MONTO_COMISION := ROUND(P_MONTO_BOLETAS * (P_PORC_COMISION / 100));
        RETURN V_MONTO_COMISION;
        
    EXCEPTION
        WHEN OTHERS THEN 
            V_ERROR_NUMERO := SQLCODE;
            V_MOTIVO_ERROR := SUBSTR(SQLERRM, 1, 30); -- DEBIDO AL TAMAÑO DEL CAMPO DE LA TABLA SE APLICÓ SUBSTR AL SQLERRM
            V_MENSAJE_ERROR := 'Ha ocurrido un error';
            -- INSERTAR ERRORES EN LA TABLA ERROR_PROCESO_COMISION A TRAVÉS DEL PROCEDIMIENTO P_ERROR_PROCESO_COMISION    
            P_ERROR_PROCESO_COMISION(V_ERROR_NUMERO, V_MOTIVO_ERROR, V_MENSAJE_ERROR); 
            RETURN 0;
    END FN_CALCULAR_COMISION;
    
END PKG_COMISIONES;
    










 